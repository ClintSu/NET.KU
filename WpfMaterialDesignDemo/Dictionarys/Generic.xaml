<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WpfMaterialDesignDemo">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip
                    x:Name="WindowResizeGrip"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    IsTabStop="false"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="NormalWindowStyle" TargetType="{x:Type local:BaseWindow}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BaseWindow}">
                    <Grid Margin="{TemplateBinding Margin}" Background="Transparent">
                        <Border
                            Background="Transparent"
                            BorderBrush="#EEEEEE"
                            BorderThickness="1,0,1,1"
                            CornerRadius="5">
                            <Grid Background="Transparent">
                                <AdornerDecorator>
                                    <Grid Background="{TemplateBinding WindowBackGround}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>

                                        <Border
                                            Grid.Row="0"
                                            Height="{TemplateBinding WindowTitleHeight}"
                                            Background="{TemplateBinding WindowTitleBackGround}"
                                            CornerRadius="5,5,0,0" />
                                        <Border
                                            Grid.Row="1"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="5">
                                            <ContentPresenter />
                                        </Border>
                                    </Grid>
                                </AdornerDecorator>

                            </Grid>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>